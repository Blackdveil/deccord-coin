name: Cross Compilation Build

on:
  workflow_dispatch:

jobs:
  build_i686_linux:
    name: Build for Linux 32-bit (i686-pc-linux-gnu)
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf deccord
          
      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for Linux 32-bit
        run: |
          sudo apt-get update
          sudo apt-get install -y make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch bison

      - name: Install Berkeley DB
        run: |
          cd deccord
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build Deccord for Linux 32-bit
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/i686-pc-linux-gnu/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          make

      - name: Strip Binaries
        run: |
          strip src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-i686-pc-linux-gnu
          cp src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt deccord-20.0.1-i686-pc-linux-gnu/
          tar -czvf deccord-20.0.1-i686-pc-linux-gnu.tar.gz deccord-20.0.1-i686-pc-linux-gnu
          zip -r deccord-20.0.1-i686-pc-linux-gnu.zip deccord-20.0.1-i686-pc-linux-gnu

      - name: Upload Linux 32-bit Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deccord-linux-i686-build
          path: |
            deccord-20.0.1-i686-pc-linux-gnu.tar.gz
            deccord-20.0.1-i686-pc-linux-gnu.zip

  build_x86_64_linux:
    name: Build for Linux (x86_64-pc-linux-gnu)
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for Linux
        run: |
          sudo apt-get update
          sudo apt-get install -y make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch bison

      - name: Install Berkeley DB
        run: |
          cd deccord
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build Deccord for Linux
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          make

      - name: Strip Binaries
        run: |
          strip src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-x86_64-pc-linux-gnu
          cp src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt deccord-20.0.1-x86_64-pc-linux-gnu/
          tar -czvf deccord-20.0.1-x86_64-pc-linux-gnu.tar.gz deccord-20.0.1-x86_64-pc-linux-gnu
          zip -r deccord-20.0.1-x86_64-pc-linux-gnu.zip deccord-20.0.1-x86_64-pc-linux-gnu

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deccord-linux-x86_64-build
          path: |
            deccord-20.0.1-x86_64-pc-linux-gnu.tar.gz
            deccord-20.0.1-x86_64-pc-linux-gnu.zip

  build_windows:
    name: Build for Windows (x86_64-w64-mingw32)
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for Windows
        run: |
          sudo apt-get update
          sudo apt-get install -y make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch bison
          sudo apt-get install -y g++-mingw-w64-x86-64
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Install Berkeley DB
        run: |
          cd deccord
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build Deccord for Windows
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          make

      - name: Strip Binaries
        run: |
          strip src/deccordd.exe src/deccord-cli.exe src/deccord-tx.exe src/qt/deccord-qt.exe

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-windows-x86_64
          cp src/deccordd.exe src/deccord-cli.exe src/deccord-tx.exe src/qt/deccord-qt.exe deccord-20.0.1-windows-x86_64/
          tar -czvf deccord-20.0.1-windows-x86_64.tar.gz deccord-20.0.1-windows-x86_64
          zip -r deccord-20.0.1-windows-x86_64.zip deccord-20.0.1-windows-x86_64

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deccord-windows-x86_64-build
          path: |
            deccord-20.0.1-windows-x86_64.tar.gz
            deccord-20.0.1-windows-x86_64.zip

  build_mac:
    name: Build for macOS (x86_64-apple-darwin)
    runs-on: macos-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for macOS
        run: |
          brew install automake cmake curl libtool pkg-config python3 bison

      - name: Install Berkeley DB
        run: |
          cd deccord
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build Deccord for macOS
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/x86_64-apple-darwin/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          make

      - name: Strip Binaries
        run: |
          strip src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-mac-x86_64
          cp src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt deccord-20.0.1-mac-x86_64/
          tar -czvf deccord-20.0.1-mac-x86_64.tar.gz deccord-20.0.1-mac-x86_64
          zip -r deccord-20.0.1-mac-x86_64.zip deccord-20.0.1-mac-x86_64

      - name: Upload macOS Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deccord-mac-x86_64-build
          path: |
            deccord-20.0.1-mac-x86_64.tar.gz
            deccord-20.0.1-mac-x86_64.zip

  build_arm_mac:
    name: Build for ARM macOS (arm64-apple-darwin)
    runs-on: macos-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf deccord

      - name: Clone Deccord repository
        run: |
          git clone https://github.com/Deccord/deccord.git
          cd deccord
          chmod -R 777 .

      - name: Setup dependencies for ARM macOS
        run: |
          brew install automake cmake curl libtool pkg-config python3 bison

      - name: Install Berkeley DB
        run: |
          cd deccord
          ./contrib/install_db4.sh `pwd`
          export BDB_PREFIX="${PWD}/db4"

      - name: Build Deccord for ARM macOS
        run: |
          cd deccord
          ./autogen.sh
          export BDB_PREFIX="${PWD}/db4"
          CONFIG_SITE=$PWD/depends/arm64-apple-darwin/share/config.site ./configure --prefix=/ \
            BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8" \
            BDB_CFLAGS="-I${BDB_PREFIX}/include" \
            --disable-tests --disable-shared
          make

      - name: Strip Binaries
        run: |
          strip src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt

      - name: Create tar.gz and zip archives
        run: |
          mkdir -p deccord-20.0.1-arm64-mac
          cp src/deccordd src/deccord-cli src/deccord-tx src/qt/deccord-qt deccord-20.0.1-arm64-mac/
          tar -czvf deccord-20.0.1-arm64-mac.tar.gz deccord-20.0.1-arm64-mac
          zip -r deccord-20.0.1-arm64-mac.zip deccord-20.0.1-arm64-mac

      - name: Upload ARM macOS Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: deccord-arm64-mac-build
          path: |
            deccord-20.0.1-arm64-mac.tar.gz
            deccord-20.0.1-arm64-mac.zip
